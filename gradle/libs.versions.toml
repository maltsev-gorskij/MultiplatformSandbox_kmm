[versions]
sqldelight = "1.5.4"
kotlin = "1.7.20"
coroutines = "1.6.4"
datetime = "0.4.0"
android_plugin = "7.3.1"
ktor = "2.2.1"
kotlin_dsl = "2.3.3"
compose_ui = "1.3.3"
compose_foundation = "1.3.1"
compose_material = "1.3.1"
compose_activity = "1.6.1"
compose_compiler = "1.3.2"
compose_navigation = "2.5.3"
accompanist = "0.28.0"
lifecycle = "2.5.1"
koin = "3.3.2"
koin_compose = "3.4.1"
junit = "4.13.2"
mockito = "4.6.0"
android_core_testing = "2.1.0"

[libraries]
gradleplugins-android = { module = "com.android.tools.build:gradle", version.ref = "android_plugin" }
gradleplugins-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradleplugins-sqldelight = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqldelight" }
gradleplugins-kotlinxserialization = { module = "org.jetbrains.kotlin.plugin.serialization:org.jetbrains.kotlin.plugin.serialization.gradle.plugin", version.ref = "kotlin" }

sqldelight-common = { module = "com.squareup.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-android = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-ios = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-content = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose_ui" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose_ui" }
compose-uitoolingpreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose_ui" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose_foundation" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose_material" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "compose_activity" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "compose_navigation" }
accompanist-swiperefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin_compose" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-test-junit = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin" }

junit = { module = "junit:junit", version.ref = "junit" }

mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
android-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "android_core_testing" }

[bundles]
ktor-common = [
    "ktor-core",
    "ktor-content",
    "ktor-serialization",
    "ktor-logging"
]

compose = [
    "compose-ui",
    "compose-uitooling",
    "compose-uitoolingpreview",
    "compose-foundation",
    "compose-material",
    "compose-activity",
    "compose-navigation",
    "accompanist-swiperefresh",
    "lifecycle-viewmodel-compose"
]